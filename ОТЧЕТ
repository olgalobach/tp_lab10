# Устанавливаем vagrant
$ sudo ${PACKAGE_MANAGER} install vagrant
# Скачиваем Virtualbox
$ wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
$ sudo add-apt-repository "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib"
$ sudo apt update && sudo apt install virtualbox-6.0

# Создаем новую виртуальную машину
$ vagrant init bento/ubuntu-19.10

A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.

# Создаем новый Vagrantfile
$ vagrant init -f -m bento/ubuntu-19.10

A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.

# В файл Vagrantfile записываем комманды для запуска
$ cat > Vagrantfile <<EOF
\$script = <<-SCRIPT
sudo apt install docker.io -y
sudo docker pull fastide/ubuntu:19.04
sudo docker create -ti --name fastide fastide/ubuntu:19.04 bash
sudo docker cp fastide:/home/developer /home/
sudo useradd developer
sudo usermod -aG sudo developer
echo "developer:developer" | sudo chpasswd
sudo chown -R developer /home/developer
SCRIPT
EOF

# для виртуальной машины
$ cat >> Vagrantfile <<EOF

Vagrant.configure("2") do |config|

  config.vagrant.plugins = ["vagrant-vbguest"]
EOF

$ cat >> Vagrantfile <<EOF

  config.vm.box = "bento/ubuntu-19.10"                              
  config.vm.network "public_network"                                
  config.vm.synced_folder('shared', '/vagrant', type: 'rsync')      

  config.vm.provider "virtualbox" do |vb|                           
    vb.gui = true                                                  
    vb.memory = "2048"                                               
  end

  config.vm.provision "shell", inline: \$script, privileged: true   

  config.ssh.extra_args = "-tt"                                     

end
EOF

# проверка корректности файла Vagrantfile
$ vagrant validate
Vagrantfile validated successfully.

# посмотреть список вируальных машин и их статусы
$ vagrant status
Current machine states:

default                   not created (libvirt)

# запуск виртуальной машины                         
$ vagrant up 
default: Machine booted and ready! 

# список проброшенных портов     
$ vagrant port
22 (guest) => 2222 (host)

$ vagrant status 
Current machine states:

default                   running (virtualbox)

# подключение к запущенной виртуальной машине                      
$ vagrant ssh
# отключение
vagrant halt


